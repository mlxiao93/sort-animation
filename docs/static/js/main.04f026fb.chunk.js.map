{"version":3,"sources":["components/DemoCard/Bash.module.scss","components/DemoCard/DemoCard.module.scss","components/DemoCard/SortService.ts","components/DemoCard/DemoCard.tsx","components/DemoCard/Bash.tsx","consts.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","bash","ToolBar","BashScroll","step","LineNum","Content","DemoCard","title","content","GraphContainer","BashContainer","OpContainer","SortType","ColorMap","SortService","sortType","Object","classCallCheck","this","steps","selectedSort","arr","i","j","push","toConsumableArray","active","swap","swapStart","tmp","swapEnd","len","length","min","greaterThan","low","arguments","undefined","high","newMid","mid","left","right","notGreateThan","notLessThan","quickSort","that","maxHeap","top","last","l","r","max","originArr","filter","unshift","Bash","bashScrollRef","React","createRef","prevProps","prevState","snapshot","bashScrollEl","current","scrollTop","scrollHeight","_this$props","props","currStepIndex","react_default","a","createElement","className","styles","xmlns","width","height","viewBox","fill","fillRule","transform","cx","cy","stroke","strokeWidth","ref","map","index","renderStep","join","key","renderStepContent","Component","MAX_VALUE","heightMaxValueRatio","viewBoxHeight","svgHeight","VIEW_BOX_VERTICAL_GAP","SortTitleMap","_SortTitleMap","defineProperty","selectionSort","insertionSort","bubbleSort","heapSort","state","currentStepIndex","autoplay","timer","genArrayAndSteps","_this2","clearTimeout","newStatus","setState","nextStep","_this3","preStep","_this4","_this5","newStepIndex","_this$state","maxStepIndex","interval","setTimeout","_this6","sort","_this$state2","_this$state3","success","_this$getCurrentStep","getCurrentStep","some","item","swapping","default","startPoint","concat","endPoint","besselBasePoint","b","delta","split","xa","Number","xb","getBesselBasePoint","nextProps","nextContext","_this7","_this$state4","currentArr","viewBoxWidth","RECT_WIDTH","preserveAspectRatio","style","transformOrigin","value","x","getRectFillColor","textAnchor","fontSize","y","id","markerWidth","markerHeight","refX","refY","orient","d","getBesselLocate","markerStart","markerEnd","Bash_Bash","marginRight","onClick","handleResetClick","bind","handleToggleAutoplayClick","handlePrevClick","disabled","handleNextClick","App","CardContainer","card","DemoCard_DemoCard","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.04f026fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bash\":\"Bash_bash__1Lyi9\",\"ToolBar\":\"Bash_ToolBar__ayztM\",\"BashScroll\":\"Bash_BashScroll__22rf6\",\"step\":\"Bash_step__2ywcI\",\"LineNum\":\"Bash_LineNum__YEe1R\",\"Content\":\"Bash_Content__4Mzct\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DemoCard\":\"DemoCard_DemoCard__SzUim\",\"title\":\"DemoCard_title__2eMV8\",\"content\":\"DemoCard_content__-YtW_\",\"GraphContainer\":\"DemoCard_GraphContainer__TR_2y\",\"BashContainer\":\"DemoCard_BashContainer__29nrb\",\"OpContainer\":\"DemoCard_OpContainer__1L_tQ\"};","export enum SortType {\n  selectionSort = 'selectionSort',    // 选择排序\n  insertionSort = 'insertionSort',     // 插入排序\n  bubbleSort = 'bubbleSort',           // 冒泡排序\n  quickSort = 'quickSort',             // 快速排序\n  heapSort = 'heapSort',              // 堆排序\n}\n\nexport interface SortStep {\n  arr: number[];\n  active?: number[];\n  swap?: number[];\n  swapStart?: boolean;\n  swapEnd?: boolean;\n}\n\nexport default class SortService {\n\n  private steps: SortStep[] = [];\n\n  private greaterThan(arr: number[], i: number, j: number): boolean {\n    this.steps.push({\n      arr: [...arr],\n      active: [i, j]\n    });\n    this.steps.push({\n      arr: [...arr],\n    });\n    return arr[i] > arr[j];\n  }\n\n  private notGreateThan(arr: number[], i: number, j: number): boolean {\n    this.steps.push({\n      arr: [...arr],\n      active: [i, j]\n    });\n    this.steps.push({\n      arr: [...arr],\n    });\n    return arr[i] <= arr[j];\n  }\n\n  private notLessThan(arr: number[], i: number, j: number): boolean {\n    this.steps.push({\n      arr: [...arr],\n      active: [i, j]\n    });\n    this.steps.push({\n      arr: [...arr],\n    });\n    return arr[i] >= arr[j];\n  }\n\n  private swap(arr: number[], i: number, j: number): void {\n    this.steps.push({\n      arr: [...arr],\n      swap: [i, j],\n      swapStart: true\n    });\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n    this.steps.push({\n      arr: [...arr],\n      swap: [j, i],\n      swapEnd: true\n    });\n    this.steps.push({\n      arr: [...arr],\n    });\n  }\n\n  private selectedSort: any;\n\n  private selectionSort(arr: number[]): void {\n    const len = arr.length;\n    for (let i = 0; i < len - 1; i++) {\n      let min = i;\n      for (let j = i + 1; j < len; j++) {\n        if (this.greaterThan(arr, min, j)) min = j;\n      }\n      if (min !== i) this.swap(arr, i, min)\n    }\n  }\n\n  private insertionSort(arr: number[]): void {\n    const len = arr.length;\n    for (let i = 1; i < len; i++) {\n      for (let j = 0; j < i; j++) {\n        if (this.greaterThan(arr, j, i)) {\n          this.swap(arr, j, i);\n        }\n      }\n    }\n  }\n\n  private bubbleSort (arr: number[]): void {\n    const len = arr.length;\n    for (let i = 0; i < len - 1; i++) {\n      for (let j = 0; j < len - i - 1; j++) {\n        if (this.greaterThan(arr, j,j + 1)) this.swap(arr, j, j + 1);\n      }\n    }\n  }\n\n  private quickSort(arr: number[], low: number = 0, high: number = arr.length - 1) {\n    if (low >= high) return;\n    let mid = low;\n\n    let left = low + 1, right = high, newMid;\n    while (true) {\n      while (this.notGreateThan(arr, left, mid)) {\n        if (left === right) {\n          if (left === high) newMid = high;    // 所有元素都比第一个元素大\n          break;\n        }\n        left++;\n      }\n      while (this.notLessThan(arr, right, mid)) {\n        if (right === left) break;\n        right--;\n      }\n      if (left < right) {\n        this.swap(arr, left, right)\n      } else {\n        break;\n      }\n    }\n\n    if (newMid === undefined) newMid = left - 1;\n\n    mid !== newMid && this.swap(arr, newMid, mid);\n    mid = newMid;\n\n    this.quickSort(arr, low, mid - 1);\n    this.quickSort(arr, mid + 1, high);\n  }\n\n  private heapSort(arr: number[]) {\n    const that = this;\n    function maxHeap(arr: number[], top = 0, last = arr.length - 1) {\n      if  (top >= last) return;\n      let l = 2 * top + 1, r = 2 * top + 2;\n      maxHeap(arr, l, last);\n      maxHeap(arr, r, last);\n      let max = top;\n      if (l <= last && that.greaterThan(arr, l, max)) max = l;\n      if (r <= last && that.greaterThan(arr, r, max)) max = r;\n      max !== top && that.swap(arr, max, top)\n    }\n    for (let last = arr.length - 1; last >= 0; last--) {\n      maxHeap(arr, 0, last);\n      that.swap(arr, 0, last);\n    }\n  }\n\n  constructor(sortType: SortType) {\n    this.selectedSort = this[sortType];\n  }\n\n  sort(arr: number[]): SortStep[] {\n    this.steps = [];\n    const originArr = [...arr];\n    this.selectedSort(arr);\n    this.steps = this.steps.filter((step: SortStep) => step.swap || step.active);\n    this.steps.unshift({arr: originArr});\n    this.steps.push({arr});\n    return this.steps;\n  }\n}","import React from 'react';\nimport SortService, {SortType, SortStep} from './SortService'\nimport Bash from './Bash'\nimport styles from './DemoCard.module.scss'\n\nimport {\n  MAX_VALUE,\n  RECT_WIDTH,\n  RECT_GAP,\n  heightMaxValueRatio,\n  viewBoxHeight,\n  viewBoxWidth,\n  svgHeight,\n  svgWidth, } from '../../consts'\n\nconst INTEAVAL = 500;\n\nconst SortTitleMap = {\n  [SortType.selectionSort]: '选择排序',\n  [SortType.insertionSort]: '插入排序',\n  [SortType.bubbleSort]: '冒泡排序',\n  [SortType.quickSort]: '快速排序',\n  [SortType.heapSort]: '堆排序',\n};\n\nenum ColorMap {\n  default = '#57AFFF',\n  active = 'rgb(247, 163, 92)',\n  swapping = 'rgb(244, 91, 91)',\n  success = '#51CB73',\n}\n\n/**\n * 得到贝塞尔曲线基准点\n * @param a\n * @param b\n * @param delta 基准点与两点中点在两点垂线上的距离\n */\nfunction getBesselBasePoint(a: any, b: any, delta: number = 15) {\n  a = a.split(/\\s+/);\n  b = b.split(/\\s+/);\n  const xa = Number(a[0]), xb = Number(b[0]);\n  const xMid = (xa + xb) / 2;\n\n  return `${xMid} ${MAX_VALUE * heightMaxValueRatio + delta}`\n}\n\nexport default class DemoCard extends React.Component<{\n  arr: number[];\n  sortType: SortType;\n}, {\n  arr?: number[];\n  steps?: SortStep[];\n  currentStepIndex: number;\n  autoplay: boolean;\n}> {\n\n  state = {\n    arr: [],\n    steps: [],\n    currentStepIndex: 0,\n\n    autoplay: true,\n  };\n\n  handleResetClick(): void {\n    this.genArrayAndSteps();\n  }\n  handleToggleAutoplayClick(): void {\n    this.timer && clearTimeout(this.timer);\n    const oldStatus = this.state.autoplay;\n    const newStatus = !oldStatus;\n    this.setState({\n      autoplay: newStatus\n    }, () => {\n      if (this.state.autoplay) {\n        this.nextStep();\n      }\n    })\n  }\n  handlePrevClick(): void {\n    this.setState({\n      autoplay: false\n    }, () => {\n      this.preStep();\n    });\n  }\n  handleNextClick(): void {\n    this.setState({\n      autoplay: false\n    }, () => {\n      this.nextStep();\n    });\n  }\n\n  preStep(): void {\n    this.timer && clearTimeout(this.timer);\n    const {currentStepIndex} = this.state;\n    if (currentStepIndex <= 0) return;\n    this.setState({\n      currentStepIndex: currentStepIndex - 1\n    });\n  }\n\n  timer?: any;\n\n  nextStep(): void {\n    this.timer && clearTimeout(this.timer);\n    const {steps, currentStepIndex, autoplay} = this.state;\n    const maxStepIndex = steps.length - 1;\n    let newStepIndex;\n    if (currentStepIndex < maxStepIndex) {\n      newStepIndex = currentStepIndex + 1;\n    } else {\n      newStepIndex = 0;\n    }\n    this.setState({\n      currentStepIndex: newStepIndex\n    });\n\n    if (autoplay) {\n      let interval = INTEAVAL;\n      if (newStepIndex === 0 || newStepIndex === maxStepIndex) interval = 2400;\n      this.timer = setTimeout(() => {\n        this.nextStep();\n      }, interval);\n    }\n  }\n\n  genArrayAndSteps(): void {\n    const arr = [...this.props.arr];\n    this.setState({\n      arr,\n    });\n    const sortInstance = new SortService(this.props.sortType);\n    const steps = sortInstance.sort(arr);\n    this.setState({\n      currentStepIndex: 0,\n      steps\n    }, () => {\n      this.nextStep();\n    });\n  }\n\n  getCurrentStep(): SortStep {\n    const {steps, currentStepIndex} = this.state;\n    return steps[currentStepIndex];\n  }\n\n  getRectFillColor(index: number): ColorMap {\n    const { steps, currentStepIndex } = this.state;\n    const lastStepIndex = steps.length - 1;\n    if (currentStepIndex === lastStepIndex) return ColorMap.success;\n    const {swap, active} = this.getCurrentStep();\n    if (swap && swap.some(item => item === index)) return  ColorMap.swapping;\n    if (active && active.some(item => item === index)) return  ColorMap.active;\n    return ColorMap.default;\n  }\n\n  getBesselLocate(): string {\n    const {swap} = this.getCurrentStep();\n    if (!swap) return '';\n    const startPoint = `${swap[0] * (RECT_WIDTH + RECT_GAP) + RECT_GAP} ${MAX_VALUE * heightMaxValueRatio}`;\n    const endPoint = `${swap[1] * (RECT_WIDTH + RECT_GAP) + RECT_GAP} ${MAX_VALUE * heightMaxValueRatio}`;\n\n    const besselBasePoint = getBesselBasePoint(startPoint, endPoint);\n\n    return `M${startPoint} Q${besselBasePoint}, ${endPoint}`;\n  }\n\n  componentWillMount(): void {\n    this.genArrayAndSteps();\n  }\n\n  componentWillReceiveProps(nextProps: Readonly<{ arr?: number[]; sortType: SortType }>, nextContext: any): void {\n    this.genArrayAndSteps();\n  }\n\n  render(): React.ReactNode {\n    const {steps, currentStepIndex, autoplay} = this.state;\n    if (!steps.length) return null;\n    const currentStep = this.getCurrentStep();\n    const currentArr = currentStep.arr;\n    const sortType = this.props.sortType;\n    return (\n      <div className={styles.DemoCard}>\n        <h4 className={styles.title}>{SortTitleMap[sortType]}</h4>\n        <div className={styles.content}>\n          <div className={styles.GraphContainer}>\n            <svg width={svgWidth} height={svgHeight} viewBox={`0 0 ${viewBoxWidth} ${viewBoxHeight}`} preserveAspectRatio=\"xMinYMid meet\">\n\n              {/* 可视柱图 */}\n              <g style={{transform: 'scaleY(-1)', transformOrigin: '50%'}}>\n                {currentArr.map((value: number, index: number) => {\n                  return <rect key={index} x={index * (RECT_WIDTH + RECT_GAP)} width={RECT_WIDTH} height={value * heightMaxValueRatio} fill={this.getRectFillColor(index)} />\n                })}\n              </g>\n\n              {/* 数值文字 */}\n              <g>\n                {currentArr.map((value: number, index: number) => {\n                  return <text textAnchor=\"middle\" fontSize=\"5\" key={index} x={index * (RECT_WIDTH + RECT_GAP) + RECT_WIDTH / 2} y={(MAX_VALUE - value) * heightMaxValueRatio - 1.5} >{value}</text>\n                })}\n              </g>\n\n              {/* 箭头 & 文字 */}\n              <defs>\n                <marker id=\"arrowLeft\" markerWidth=\"6\" markerHeight=\"6\" refX=\"3\" refY=\"3\" orient=\"auto\">\n                  <path d=\"M3,3 L6 0\" fill=\"transparent\" stroke={ColorMap.swapping}/>\n                  <path d=\"M3,3 L6 6\" fill=\"transparent\" stroke={ColorMap.swapping}/>\n                </marker>\n                <marker id=\"arrowRight\" markerWidth=\"6\" markerHeight=\"6\" refX=\"3\" refY=\"3\" orient=\"auto\">\n                  <path d=\"M3,3 L0 0\" fill=\"transparent\" stroke={ColorMap.swapping}/>\n                  <path d=\"M3,3 L0 6\" fill=\"transparent\" stroke={ColorMap.swapping}/>\n                </marker>\n              </defs>\n\n              {/* 连接线 */}\n              {this.getBesselLocate() && <g style={{transform: 'translateY(2px)'}}>\n                <path d={this.getBesselLocate()} stroke={ColorMap.swapping} fill=\"transparent\" strokeWidth=\"0.5\" markerStart=\"url(#arrowLeft)\"  markerEnd=\"url(#arrowRight)\" />\n              </g>}\n\n            </svg>\n          </div>\n          <div className={styles.BashContainer}>\n            <Bash steps={steps} currStepIndex={currentStepIndex} />\n          </div>\n          <div className={styles.OpContainer}>\n            <button style={{marginRight: '3em'}} onClick={this.handleResetClick.bind(this)}>reset</button>\n            <button onClick={this.handleToggleAutoplayClick.bind(this)}>{autoplay ? 'pause' : 'play'}</button>\n            <button onClick={this.handlePrevClick.bind(this)} disabled={autoplay}>prev</button>\n            <button onClick={this.handleNextClick.bind(this)} disabled={autoplay}>next</button>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}","import React from 'react';\nimport {SortStep} from \"./SortService\";\nimport styles from './Bash.module.scss';\n\nexport default class Bash extends React.Component<{\n  steps: SortStep[];\n  currStepIndex: number;\n}, {}> {\n\n  static renderStepContent(step: SortStep, index: number, length: number): React.ReactNode {\n    const {arr, swap, active, swapStart} = step;\n    if (swap) {\n      if (swapStart) {\n        return (<div><span className=\"color-swapping\">交换</span>&nbsp;<span className=\"color-code\">{arr[swap[0]]}</span>&nbsp;<span className=\"color-swapping\">和</span>&nbsp;<span className=\"color-code\">{arr[swap[1]]}</span></div>);\n      } else {\n        return <div><span className=\"color-swapping\">交换后：</span><span className=\"color-code\">[{arr.join(', ')}]</span></div>\n      }\n    }\n    if (active) {\n      return <div><span className=\"color-active\">比较</span>&nbsp;<span className=\"color-code\">{arr[active[0]]}</span>&nbsp;<span className=\"color-active\">和</span>&nbsp;<span className=\"color-code\">{arr[active[1]]}</span></div>;\n    }\n    if (index === 0) {\n      return <div><span className=\"color-default\">原数组：</span><span className=\"color-code\">[{arr.join(', ')}]</span></div>\n    }\n    if (index === length - 1) {\n      return <div><span className=\"color-success\">排序后：</span><span className=\"color-code\">[{arr.join(', ')}]</span></div>\n    }\n    return null;\n  }\n\n  static renderStep(step: SortStep, index: number, length: number): React.ReactNode {\n    return <div key={index} className={styles.step}>\n      <div className={styles.LineNum}>{index + 1}</div>\n      <div className={styles.Content}>\n        { Bash.renderStepContent(step, index, length) }\n      </div>\n    </div>;\n  }\n\n  bashScrollRef: React.RefObject<any> = React.createRef();\n\n  componentDidUpdate(prevProps: Readonly<{ steps: SortStep[]; currStepIndex: number }>, prevState: Readonly<{}>, snapshot?: any): void {\n    const bashScrollEl = this.bashScrollRef.current as HTMLElement;\n    bashScrollEl.scrollTop = bashScrollEl.scrollHeight;\n  }\n\n  render(): React.ReactNode {\n    const {steps, currStepIndex} = this.props;\n    if (!steps) return null;\n    const length = steps.length;\n    return <div className={styles.bash +  ' code'}>\n      <div className={styles.ToolBar}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"54\" height=\"14\" viewBox=\"0 0 54 14\"><g fill=\"none\" fillRule=\"evenodd\" transform=\"translate(1 1)\"><circle cx=\"6\" cy=\"6\" r=\"6\" fill=\"#FF5F56\" stroke=\"#E0443E\" strokeWidth=\".5\"/><circle cx=\"26\" cy=\"6\" r=\"6\" fill=\"#FFBD2E\" stroke=\"#DEA123\" strokeWidth=\".5\"/><circle cx=\"46\" cy=\"6\" r=\"6\" fill=\"#27C93F\" stroke=\"#1AAB29\" strokeWidth=\".5\"/></g></svg>\n      </div>\n      <div ref={this.bashScrollRef} className={styles.BashScroll}>\n        {steps.map((step, index) => {\n          if (index <= currStepIndex) {\n            return Bash.renderStep(step, index, length);\n          }\n          return null;\n        })}\n      </div>\n    </div>\n  }\n}","export const ARRAY_LENGTH = 10;   // 数组长度\nexport const MAX_VALUE = 10;   // 数值最大值\n\nexport const RECT_WIDTH = 10;   // 矩形宽度\nexport const RECT_GAP = 3;      // 矩形间距\n\nexport const VIEW_BOX_VERTICAL_GAP = 10;  // viewBox距svg边框的上（下）边距，腾出空间给指示器\n\nexport const viewBoxRatio = 2.5;    // viewBox放大比例\nexport const heightMaxValueRatio = 10;  // 图形高度和最大值的比例\n\nexport const viewBoxHeight = MAX_VALUE * heightMaxValueRatio;\nexport const viewBoxWidth = RECT_WIDTH * ARRAY_LENGTH + RECT_GAP * (ARRAY_LENGTH - 1);\n\nexport const svgHeight = (viewBoxHeight + VIEW_BOX_VERTICAL_GAP * 2) * viewBoxRatio;\nexport const svgWidth = viewBoxWidth * viewBoxRatio;","import React from 'react';\nimport './App.scss';\nimport {SortType} from './components/DemoCard/SortService';\nimport DemoCard from './components/DemoCard/DemoCard';\nimport styles from './app.module.scss'\n\nclass App extends React.Component<{}, {\n  arr: number[]\n}> {\n\n  state = {\n    arr: [8, 5, 3, 10, 4, 2, 1, 6, 7, 9]\n  };\n\n  render(): React.ReactNode {\n    const { arr } = this.state;\n    return (\n      <div className=\"app\">\n        <div className={styles.CardContainer}>\n          <div className={styles.card}>\n            <DemoCard arr={arr} sortType={SortType.selectionSort} />\n          </div>\n          <div className={styles.card}>\n            <DemoCard arr={arr} sortType={SortType.insertionSort} />\n          </div>\n          <div className={styles.card}>\n            <DemoCard arr={arr} sortType={SortType.bubbleSort} />\n          </div>\n          <div className={styles.card}>\n            <DemoCard arr={arr} sortType={SortType.quickSort} />\n          </div>\n          <div className={styles.card}>\n            <DemoCard arr={arr} sortType={SortType.heapSort} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}